{"version":3,"sources":["../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/identity.js","hooks/useTokenBalance.ts","hooks/useAllowance.ts","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/orderBy.js","../node_modules/lodash/_baseOrderBy.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/lodash/_baseMap.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseSortBy.js","../node_modules/lodash/_compareMultiple.js","../node_modules/lodash/_compareAscending.js","views/MyEpicCollection/components/InfoRow.tsx","views/MyEpicCollection/components/Image.tsx","views/MyEpicCollection/utils/contracts.ts","views/MyEpicCollection/contexts/NftProvider.tsx","views/MyEpicCollection/components/ClaimNftModal.tsx","views/MyEpicCollection/components/BurnNftModal.tsx","views/MyEpicCollection/components/TransferNftModal.tsx","views/MyEpicCollection/components/NftCard/index.tsx","views/MyEpicCollection/components/NftGrid.tsx","views/MyEpicCollection/components/NftList.tsx","views/MyEpicCollection/components/NftProgressSimple.tsx","views/MyEpicCollection/components/NftInfo.tsx","views/MyEpicCollection/index.tsx"],"names":["isObject","require","module","exports","value","key","srcValue","object","undefined","Object","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","a","cakeContract","getContract","cakeABI","getCakeAddress","methods","call","supply","BigNumber","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","balanceOf","bal","fetchBalance","useTokenBalance","useWallet","account","ethereum","fastRefresh","getTokenBalance","res","useNftAllowance","tokenContract","spenderAddress","dependency","allowance","setAllowance","console","log","toString","fetch","baseMatches","baseMatchesProperty","identity","isArray","property","baseForOwn","baseEach","createBaseEach","baseOrderBy","collection","iteratees","orders","guard","arrayMap","baseGet","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","length","iteratee","index","result","other","baseIsMatch","getMatchData","matchesStrictComparable","source","matchData","Stack","baseIsEqual","customizer","noCustomizer","data","objValue","stack","COMPARE_PARTIAL_FLAG","isStrictComparable","keys","get","hasIn","isKey","toKey","path","baseHasIn","hasPath","castPath","isArguments","isIndex","isLength","hasFunc","baseProperty","basePropertyDeep","isArrayLike","Array","baseFor","createBaseFor","fromRight","keysFunc","iterable","props","eachFunc","array","comparer","sort","compareAscending","objCriteria","criteria","othCriteria","ordersLength","isSymbol","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","InfoRow","styled","div","Container","theme","colors","borderColor","StyledImage","img","Image","src","alt","originalLink","previewImage","href","target","rel","getNftContract","contractOptions","nftAbi","nft","NFT","getFromWayArray","v","t","i","push","fromWei","getToFloat","parseInt","getToInt","parseFloat","NftProviderContext","createContext","NftProvider","children","isMounted","useRef","isInitialized","hasClaimed","ownerById","countBurnt","startBlockNumber","endBlockNumber","totalSupplyDistributed","currentDistributedSupply","nftMap","allowMultipleClaims","rarity","priceMultiplier","maxMintPerNft","tokenPerBurn","amounts","maxMintByNft","prices","myMints","state","setState","currentBlock","useBlock","multicall","epicNftFarm","address","EpicNftFarm","name","startBlockNumberArr","endBlockNumberArr","countBurntArr","totalSupplyDistributedArr","currentDistributedSupplyArr","allowMultipleClaimsArr","rarityArr","priceMultiplierArr","maxMintPerNftArr","tokenPerBurnArr","prevState","toNumber","error","fetchContractData","nftContract","params","getMinted","getTokenIdAndNftId","tokenOfOwnerByIndex","tokenId","getNftId","nftId","tokenIdPromises","Promise","all","tokenIdsOwnedByWallet","reduce","accum","association","current","canBurnNft","Provider","getTokenIds","reInitialize","Value","Text","ModalContent","Actions","ClaimNftModal","onSuccess","onDismiss","isLoading","setIsLoading","pendingTx","setPendingTx","setError","TranslateString","useI18n","nftMintingContract","useRabbitMintingFarm","contraToken","useERC20","getLifeAddress","onApprove","useNftApprove","cakeBalance","cakeInWallet","getBalanceNumber","handleConfirm","mintNFT","send","from","on","title","tokenAmount","color","mb","fullWidth","disabled","onClick","BurnNftModal","tokenIds","accepted","setAccepted","burnNFT","AMOUNT_TO_CLAIM","style","alignItems","display","checked","scale","onChange","ml","cursor","variant","Label","label","text","TransferNftModal","setValue","usePancakeRabbits","Web3","utils","isAddress","transferFrom","htmlFor","id","type","placeholder","evt","inputValue","isWarning","StyledNotFound","Header","InfoBlock","Button","attrs","SmallCard","Card","NftCard","isOpen","nftCount","nftBurnCount","useContext","originalImage","fileType","description","tokenSupply","metadata","nftIndex","indexOf","MINTS","MINTED","MAX_MINT","firstCharOfAccount","slice","lastCharOfAccount","loggedIn","walletCanClaim","Math","round","walletOwnsNft","fetchDetails","ChevronUpIcon","ChevronDownIcon","useCallback","isDataFetched","handleSuccess","useModal","onPresentTransferModal","isActive","width","loop","autoPlay","muted","kind","outline","mt","p","as","textAlign","Page","NftGrid","BaseLayout","mediaQueries","sm","NftList","filteredNft","nfts","forEach","orderBy","map","NftProgressSimple","myNFTs","NftInfo","StyledHero","textSubtle","CustomButton","GoldenButton","Nft","history","useHistory","size"],"mappings":"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","file":"static/js/14.6a639e3e.chunk.js","sourcesContent":["var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useCake, useLottery } from './useContract'\nimport { getAllowance } from '../utils/erc20'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const lotteryContract = useLottery()\n  const cakeContract = useCake()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await getAllowance(cakeContract, lotteryContract, account)\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && cakeContract && cakeContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, cakeContract, lotteryContract])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n\n// Retrieve NFT allowance\nexport const useNftAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        console.log(e.toString())\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","import styled from 'styled-components'\n\nconst InfoRow = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n`\n\nexport default InfoRow\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface ImageProps {\n  src: string\n  alt: string\n  originalLink?: string\n}\n\nconst Container = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  padding-bottom: 100%;\n`\n\nconst StyledImage = styled.img`\n  position: absolute;\n  width: 100%;\n  top: 0;\n  left: 0;\n  transition: opacity 1s linear;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 32px 32px 0 0;\n`\n\nconst Image: React.FC<ImageProps> = ({ src, alt, originalLink }) => {\n  const previewImage = <StyledImage src={src} alt={alt} />\n\n  return (\n    <Container>\n      {originalLink ? (\n        <a href={originalLink} target=\"_blank\" rel=\"noreferrer noopener\">\n          {previewImage}\n        </a>\n      ) : (\n        previewImage\n      )}\n    </Container>\n  )\n}\n\nexport default Image\n","import { AbiItem, fromWei } from 'web3-utils'\nimport { getContract } from 'utils/web3'\nimport { ContractOptions } from 'web3-eth-contract'\nimport nftFarm from 'config/abi/NftFarm.json'\nimport nft from 'config/abi/NFT.json'\nimport { NftFarm, NFT } from 'config/constants/nfts'\nimport BigNumber from 'bignumber.js'\n// TODO: Figure out how to add current account to contracts to write methods can be used\n\nexport const getNftMintingContract = (contractOptions?: ContractOptions) => {\n  const nftMintingFarmAbi = (nftFarm as unknown) as AbiItem\n  return getContract(nftMintingFarmAbi, NftFarm, contractOptions)\n}\n\nexport const getNftContract = (contractOptions?: ContractOptions) => {\n  const nftAbi = (nft as unknown) as AbiItem\n  return getContract(nftAbi, NFT, contractOptions)\n}\n\nexport const getFromWei = (v: any) => {\n  if (!v) return 0\n  return parseFloat(fromWei(v.toString(), 'ether'))\n}\n\nexport const getFromWayArray = (v: any) => {\n  if (!v) return []\n  const array = []\n  const t = v.length\n  for (let i = 0; i < t; i++) {\n    if (!v[i]) {\n      array.push(0)\n    } else {\n      array.push(fromWei(v[i].toString(), 'ether'))\n    }\n  }\n  return array\n}\n\nexport const getToFloat = (v: any) => {\n  if (!v) return []\n  const array = []\n  if (!v) return []\n  const t = v.length\n  for (let i = 0; i < t; i++) {\n    if (!v[i]) {\n      array.push(0)\n    } else {\n      array.push(parseInt(v[i].toString()))\n    }\n  }\n  return array\n}\n\nexport const getToInt = (v: any) => {\n  const array = []\n  if (!v) return []\n  const t = v.length\n  for (let i = 0; i < t; i++) {\n    if (!v[i]) {\n      array.push(0)\n    } else {\n      array.push(parseFloat(v[i].toString()))\n    }\n  }\n  return array\n}\n\nexport default getNftMintingContract\n","import React, { createContext, ReactNode, useEffect, useRef, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useBlock from 'hooks/useBlock'\nimport epicNftFarm from 'config/abi/epicNftFarm.json'\nimport { EpicNftFarm } from 'config/constants/epic'\nimport multicall from 'utils/multicall'\nimport { getNftContract, getFromWei, getToFloat, getToInt, getFromWayArray } from '../utils/contracts'\n\ninterface NftProviderProps {\n  children: ReactNode\n}\n\ntype NftMap = {\n  [key: number]: number[]\n}\n\ntype State = {\n  isInitialized: boolean\n  hasClaimed: number[]\n  ownerById: number[]\n  amounts: number[]\n  maxMintByNft: number[]\n  prices: number[]\n  myMints: number[]\n  countBurnt: number\n  endBlockNumber: number\n  startBlockNumber: number\n  totalSupplyDistributed: number\n  currentDistributedSupply: number\n  balanceOf: number\n  nftMap: NftMap\n\n  allowMultipleClaims: boolean\n  rarity: string\n  priceMultiplier: number\n  maxMintPerNft: number\n  tokenPerBurn: number\n}\n\ntype Context = {\n  canBurnNft: boolean\n  getTokenIds: (nftId: number) => number[]\n  reInitialize: () => void\n} & State\n\nexport const NftProviderContext = createContext<Context | null>(null)\n\nconst NftProvider: React.FC<NftProviderProps> = ({ children }) => {\n  const isMounted = useRef(true)\n  const [state, setState] = useState<State>({\n    isInitialized: false,\n    hasClaimed: [],\n    ownerById: [],\n    countBurnt: 0,\n    startBlockNumber: 0,\n    endBlockNumber: 0,\n    totalSupplyDistributed: 0,\n    currentDistributedSupply: 0,\n    balanceOf: 0,\n    nftMap: {},\n\n    allowMultipleClaims: true,\n    rarity: '',\n    priceMultiplier: 0,\n    maxMintPerNft: 0,\n    tokenPerBurn: 0,\n\n    amounts: [],\n    maxMintByNft: [],\n    prices: [],\n    myMints: [],\n  })\n  const { account } = useWallet()\n  const currentBlock = useBlock()\n\n  const { isInitialized } = state\n\n  // Static data\n  useEffect(() => {\n    const fetchContractData = async () => {\n      try {\n        const [\n          startBlockNumberArr,\n          endBlockNumberArr,\n          countBurntArr,\n          totalSupplyDistributedArr,\n          currentDistributedSupplyArr,\n\n          allowMultipleClaimsArr,\n          rarityArr,\n          priceMultiplierArr,\n          maxMintPerNftArr,\n          tokenPerBurnArr,\n        ] = await multicall(epicNftFarm, [\n          { address: EpicNftFarm, name: 'startBlockNumber' },\n          { address: EpicNftFarm, name: 'endBlockNumber' },\n          { address: EpicNftFarm, name: 'countBurnt' },\n          { address: EpicNftFarm, name: 'totalSupplyDistributed' },\n          { address: EpicNftFarm, name: 'currentDistributedSupply' },\n          { address: EpicNftFarm, name: 'allowMultipleClaims' },\n          { address: EpicNftFarm, name: 'rarity' },\n          { address: EpicNftFarm, name: 'priceMultiplier' },\n          { address: EpicNftFarm, name: 'maxMintPerNft' },\n          { address: EpicNftFarm, name: 'tokenPerBurn' },\n        ])\n\n        // TODO: Figure out why these are coming back as arrays\n        const [startBlockNumber]: [BigNumber] = startBlockNumberArr\n        const [endBlockNumber]: [BigNumber] = endBlockNumberArr\n        const [countBurnt]: [BigNumber] = countBurntArr\n        const [totalSupplyDistributed]: [BigNumber] = totalSupplyDistributedArr\n        const [currentDistributedSupply]: [BigNumber] = currentDistributedSupplyArr\n\n        setState((prevState) => ({\n          ...prevState,\n          isInitialized: true,\n          countBurnt: countBurnt.toNumber(),\n          startBlockNumber: startBlockNumber.toNumber(),\n          endBlockNumber: endBlockNumber.toNumber(),\n          currentDistributedSupply: currentDistributedSupply.toNumber(),\n          totalSupplyDistributed: totalSupplyDistributed.toNumber(),\n          allowMultipleClaims: allowMultipleClaimsArr[0],\n          rarity: rarityArr[0].toString(),\n          priceMultiplier: parseFloat(priceMultiplierArr[0].toString()),\n          maxMintPerNft: parseInt(maxMintPerNftArr[0].toString()),\n          tokenPerBurn: getFromWei(tokenPerBurnArr[0]),\n        }))\n      } catch (error) {\n        console.error('an error occured', error)\n      }\n    }\n\n    fetchContractData()\n  }, [isInitialized, setState])\n\n  // Data from the contract that needs an account\n  useEffect(() => {\n    const fetchContractData = async () => {\n      try {\n        const nftContract = getNftContract()\n\n        const getMinted = await multicall(epicNftFarm, [{ address: EpicNftFarm, name: 'getMinted', params: [account] }])\n\n        // console.log('getMinted', getMinted)\n\n        const hasClaimed = getMinted[0][0]\n        const amounts = getToFloat(getMinted[0][1])\n        const ownerById = getMinted[0][2]\n        const maxMintByNft = getToInt(getMinted[0][3])\n        const prices = getFromWayArray(getMinted[0][4])\n        const myMints = getToInt(getMinted[0][5])\n\n        // console.log('hasClaimed', hasClaimed)\n        // console.log('amounts', amounts)\n        // console.log('ownerById', ownerById)\n        // console.log('maxMintByNft', maxMintByNft)\n        // console.log('prices', prices)\n        // console.log('myMints', myMints)\n\n        const balanceOf = await nftContract.methods.balanceOf(account).call()\n\n        let nftMap: NftMap = {}\n\n        // If the \"balanceOf\" is greater than 0 then retrieve the tokenIds\n        // owned by the wallet, then the nftId's associated with the tokenIds\n        if (balanceOf > 0) {\n          const getTokenIdAndNftId = async (index: number) => {\n            try {\n              const tokenId = await nftContract.methods.tokenOfOwnerByIndex(account, index).call()\n              const nftId = await nftContract.methods.getNftId(tokenId).call()\n\n              return [parseInt(nftId, 10), parseInt(tokenId, 10)]\n            } catch (error) {\n              return null\n            }\n          }\n\n          const tokenIdPromises = []\n\n          for (let i = 0; i < balanceOf; i++) {\n            tokenIdPromises.push(getTokenIdAndNftId(i))\n          }\n\n          const tokenIdsOwnedByWallet = await Promise.all(tokenIdPromises)\n\n          // While improbable a wallet can own more than one of the same nft so the format is:\n          // { [nftId]: [array of tokenIds] }\n          nftMap = tokenIdsOwnedByWallet.reduce((accum, association) => {\n            if (!association) {\n              return accum\n            }\n\n            const [nftId, tokenId] = association\n\n            return {\n              ...accum,\n              [nftId]: accum[nftId] ? [...accum[nftId], tokenId] : [tokenId],\n            }\n          }, {})\n        }\n\n        setState((prevState) => ({\n          ...prevState,\n          isInitialized: true,\n          hasClaimed,\n          ownerById,\n          balanceOf,\n          nftMap,\n\n          amounts,\n          maxMintByNft,\n          prices,\n          myMints,\n        }))\n      } catch (error) {\n        console.error('an error occured', error)\n      }\n    }\n\n    if (account) {\n      fetchContractData()\n    }\n  }, [isInitialized, account, setState])\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false\n    }\n  }, [isMounted])\n\n  const canBurnNft = currentBlock <= state.endBlockNumber\n  const getTokenIds = (nftId: number) => state.nftMap[nftId]\n\n  /**\n   * Allows consumers to re-fetch all data from the contract. Triggers the effects.\n   * For example when a transaction has been completed\n   */\n  const reInitialize = () => {\n    // Only attempt to re-initialize if the component is still mounted\n    // Transactions can take awhile so it is likely some users will navigate to another page\n    // before the transaction is finished\n    if (isMounted.current) {\n      setState((prevState) => ({ ...prevState, isInitialized: false }))\n    }\n  }\n\n  return (\n    <NftProviderContext.Provider value={{ ...state, canBurnNft, getTokenIds, reInitialize }}>\n      {children}\n    </NftProviderContext.Provider>\n  )\n}\n\nexport default NftProvider\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Button, Modal, Text } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { EpicNftFarm, AMOUNT_TO_CLAIM } from 'config/constants/epic'\nimport { getLifeAddress } from 'utils/addressHelpers'\nimport { Nft } from 'config/constants/types'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { useERC20, useRabbitMintingFarm } from 'hooks/useContract'\nimport InfoRow from './InfoRow'\nimport { useNftAllowance } from '../../../hooks/useAllowance'\nimport { useNftApprove } from '../../../hooks/useApprove'\n\ninterface ClaimNftModalProps {\n  nft: Nft\n  onSuccess: () => any\n  onDismiss?: () => void\n}\n\nconst Value = styled(Text)`\n  font-weight: 600;\n`\n\nconst ModalContent = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Actions = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 8px;\n`\n\nconst ClaimNftModal: React.FC<ClaimNftModalProps> = ({ nft, onSuccess, onDismiss }) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [error, setError] = useState(null)\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const nftMintingContract = useRabbitMintingFarm(EpicNftFarm)\n  const contraToken = useERC20(getLifeAddress())\n  const allowance = useNftAllowance(contraToken, EpicNftFarm, pendingTx)\n  const onApprove = useNftApprove(contraToken, EpicNftFarm)\n  const cakeBalance = useTokenBalance(getLifeAddress())\n  const cakeInWallet = getBalanceNumber(cakeBalance)\n\n  // console.log('getLifeAddress', getLifeAddress(), EpicNftFarm, allowance)\n  // console.log('allowance', allowance)\n\n  const handleConfirm = async () => {\n    if (allowance === null) {\n      return\n    }\n\n    try {\n      await nftMintingContract.methods\n        .mintNFT(nft.nftId)\n        .send({ from: account })\n        .on('sending', () => {\n          setIsLoading(true)\n        })\n        .on('receipt', () => {\n          onDismiss()\n          onSuccess()\n        })\n        .on('error', () => {\n          console.error(error)\n          setError('Unable to claim NFT')\n          setIsLoading(false)\n        })\n    } catch (err) {\n      console.error('Unable to mint NFT:', err)\n    }\n  }\n\n  useEffect(() => {\n    if (cakeInWallet === 0) {\n      setError(`You must have LIFE balance to claim NFT`)\n    }\n  }, [cakeInWallet, setError])\n\n  return (\n    <Modal title={`Claim NFT for ${nft.tokenAmount} LIFE`} onDismiss={onDismiss}>\n      <ModalContent>\n        {error && (\n          <Text color=\"failure\" mb=\"8px\">\n            {error}\n          </Text>\n        )}\n        <InfoRow>\n          <Text>{TranslateString(999, 'You will receive')}:</Text>\n          <Value>{`1x \"${nft.name}\" NFT`}</Value>\n        </InfoRow>\n      </ModalContent>\n      <Actions>\n        <Button\n          fullWidth\n          disabled={!account || pendingTx || isLoading || allowance > 0}\n          onClick={async () => {\n            try {\n              setPendingTx(true)\n              await onApprove()\n              setPendingTx(false)\n            } catch (e) {\n              setPendingTx(false)\n              console.error(e)\n            }\n          }}\n        >\n          Approve\n        </Button>\n\n        <Button\n          fullWidth\n          onClick={handleConfirm}\n          disabled={!account || isLoading || cakeInWallet <= 0 || allowance <= 0}\n        >\n          {TranslateString(464, 'Confirm')}\n        </Button>\n      </Actions>\n    </Modal>\n  )\n}\n\nexport default ClaimNftModal\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Button, Checkbox, Modal, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { Nft } from 'config/constants/types'\nimport { EpicNftFarm, AMOUNT_TO_CLAIM } from 'config/constants/epic'\nimport { useRabbitMintingFarm } from 'hooks/useContract'\nimport InfoRow from './InfoRow'\n\ninterface BurnNftModalProps {\n  nft: Nft\n  tokenIds: number[]\n  onSuccess: () => any\n  onDismiss?: () => void\n}\n\nconst Value = styled(Text)`\n  font-weight: 600;\n`\n\nconst ModalContent = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Actions = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 8px;\n`\n\nconst BurnNftModal: React.FC<BurnNftModalProps> = ({ nft, tokenIds, onSuccess, onDismiss }) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(null)\n  const [accepted, setAccepted] = useState(false)\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const nftMintingContract = useRabbitMintingFarm(EpicNftFarm)\n\n  const handleConfirm = async () => {\n    try {\n      const [tokenId] = tokenIds\n\n      await nftMintingContract.methods\n        .burnNFT(tokenId)\n        .send({ from: account })\n        .on('sending', () => {\n          setIsLoading(true)\n        })\n        .on('receipt', () => {\n          onDismiss()\n          onSuccess()\n        })\n        .on('error', () => {\n          console.error(error)\n          setError('Unable to burn NFT')\n          setIsLoading(false)\n        })\n    } catch (err) {\n      console.error('Unable to burn NFT:', err)\n    }\n  }\n\n  return (\n    <Modal title={TranslateString(999, 'Trade in NFT')} onDismiss={onDismiss}>\n      <ModalContent>\n        {error && (\n          <Text color=\"failure\" mb=\"8px\">\n            {error}\n          </Text>\n        )}\n        <InfoRow>\n          <Text>{TranslateString(999, 'Trade in')}:</Text>\n          <Value>{`1x \"${nft.name}\" NFT`}</Value>\n        </InfoRow>\n        <InfoRow>\n          <Text>{TranslateString(999, 'You will receive')}:</Text>\n          <Value>${AMOUNT_TO_CLAIM} LIFE</Value>\n        </InfoRow>\n      </ModalContent>\n      <ModalContent>\n        <Text color=\"failure\">\n          {TranslateString(999, 'When you trade in this NFT to receive LIFE, you will lose access to it forever!')}\n        </Text>\n        <Text color=\"failure\">{TranslateString(999, 'It will be burned and removed from circulation')}</Text>\n      </ModalContent>\n      <ModalContent style={{ alignItems: 'center', display: 'inline-flex' }}>\n        <Checkbox checked={accepted} scale=\"sm\" onChange={() => setAccepted(!accepted)} />\n        <Text ml=\"8px\" onClick={() => setAccepted(!accepted)} style={{ cursor: 'pointer' }}>\n          {TranslateString(999, 'I understand')}\n        </Text>\n      </ModalContent>\n      <Actions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button fullWidth onClick={handleConfirm} disabled={!account || isLoading || !accepted}>\n          {TranslateString(464, 'Confirm')}\n        </Button>\n      </Actions>\n    </Modal>\n  )\n}\n\nexport default BurnNftModal\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Web3 from 'web3'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Button, Input, Modal, Text } from '@pancakeswap-libs/uikit'\nimport { NFT } from 'config/constants/epic'\nimport { Nft } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport { usePancakeRabbits } from 'hooks/useContract'\nimport InfoRow from './InfoRow'\n\ninterface TransferNftModalProps {\n  nft: Nft\n  tokenIds: number[]\n  onSuccess: () => any\n  onDismiss?: () => void\n}\n\nconst Value = styled(Text)`\n  font-weight: 600;\n`\n\nconst ModalContent = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Actions = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 8px;\n`\n\nconst Label = styled.label`\n  color: ${({ theme }) => theme.colors.text};\n  display: block;\n  margin-bottom: 8px;\n  margin-top: 24px;\n`\n\nconst TransferNftModal: React.FC<TransferNftModalProps> = ({ nft, tokenIds, onSuccess, onDismiss }) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [value, setValue] = useState('')\n  const [error, setError] = useState(null)\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const nftContract = usePancakeRabbits(NFT)\n\n  const handleConfirm = async () => {\n    try {\n      const isValidAddress = Web3.utils.isAddress(value)\n\n      if (!isValidAddress) {\n        setError(TranslateString(999, 'Please enter a valid wallet address'))\n      } else {\n        await nftContract.methods\n          .transferFrom(account, value, tokenIds[0])\n          .send({ from: account })\n          .on('sending', () => {\n            setIsLoading(true)\n          })\n          .on('receipt', () => {\n            onDismiss()\n            onSuccess()\n          })\n          .on('error', () => {\n            console.error(error)\n            setError('Unable to transfer NFT')\n            setIsLoading(false)\n          })\n      }\n    } catch (err) {\n      console.error('Unable to transfer NFT:', err)\n    }\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: inputValue } = evt.target\n    setValue(inputValue)\n  }\n\n  return (\n    <Modal title={TranslateString(999, 'Transfer NFT')} onDismiss={onDismiss}>\n      <ModalContent>\n        {error && (\n          <Text color=\"failure\" mb=\"8px\">\n            {error}\n          </Text>\n        )}\n        <InfoRow>\n          <Text>{TranslateString(999, 'Transferring')}:</Text>\n          <Value>{`1x \"${nft.name}\" NFT`}</Value>\n        </InfoRow>\n        <Label htmlFor=\"transferAddress\">{TranslateString(999, 'Receiving address')}:</Label>\n        <Input\n          id=\"transferAddress\"\n          name=\"address\"\n          type=\"text\"\n          placeholder={TranslateString(999, 'Paste address')}\n          value={value}\n          onChange={handleChange}\n          isWarning={error}\n          disabled={isLoading}\n        />\n      </ModalContent>\n      <Actions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button fullWidth onClick={handleConfirm} disabled={!account || isLoading || !value}>\n          {TranslateString(464, 'Confirm')}\n        </Button>\n      </Actions>\n    </Modal>\n  )\n}\n\nexport default TransferNftModal\n","import React, { useState, useContext, useCallback } from 'react'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Tag,\n  Button,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Text,\n  CardFooter,\n  useModal,\n  LogoIcon,\n} from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\nimport { Nft } from 'config/constants/types'\nimport { AMOUNT_TO_CLAIM } from 'config/constants/epic'\nimport Page from 'components/layout/Page'\nimport InfoRow from '../InfoRow'\nimport Image from '../Image'\nimport { NftProviderContext } from '../../contexts/NftProvider'\nimport { getNftContract } from '../../utils/contracts'\nimport ClaimNftModal from '../ClaimNftModal'\nimport BurnNftModal from '../BurnNftModal'\nimport TransferNftModal from '../TransferNftModal'\n\ninterface NftCardProps {\n  nft: Nft\n}\n\nconst StyledNotFound = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 64px);\n  justify-content: center;\n`\n\nconst Header = styled(InfoRow)`\n  min-height: 28px;\n`\n\nconst DetailsButton = styled(Button).attrs({ variant: 'text', fullWidth: true })`\n  height: auto;\n  padding: 16px 24px;\n\n  &:hover:not(:disabled):not(:active) {\n    background-color: transparent;\n  }\n\n  &:focus:not(:active) {\n    box-shadow: none;\n  }\n`\n\nconst InfoBlock = styled.div`\n  padding: 0 24px 24px;\n`\n\nconst Value = styled(Text)`\n  font-weight: 600;\n`\n\nconst SmallCard = styled(Card)`\n  margin: 0 auto;\n`\n\nconst NftCard: React.FC<NftCardProps> = ({ nft }) => {\n  const [state, setState] = useState({\n    isLoading: false,\n    isOpen: true,\n    nftCount: 0,\n    nftBurnCount: 0,\n  })\n  const TranslateString = useI18n()\n  const {\n    isInitialized,\n    hasClaimed,\n    ownerById,\n    canBurnNft,\n    totalSupplyDistributed,\n    currentDistributedSupply,\n    getTokenIds,\n    reInitialize,\n    allowMultipleClaims,\n    rarity,\n    priceMultiplier,\n    maxMintPerNft,\n    tokenPerBurn,\n    amounts,\n    maxMintByNft,\n    prices,\n    myMints,\n  } = useContext(NftProviderContext)\n  const { account } = useWallet()\n\n  console.log('CONTRACT/GALLERY INFO:', totalSupplyDistributed, rarity, priceMultiplier, maxMintPerNft, tokenPerBurn)\n  console.log('LIMITS BY NFT:', tokenPerBurn, amounts, maxMintByNft, prices)\n\n  // maxMintPerNft limit max amount that a nft can be minted\n  // maxMintByNft array containing individual amount of mint per nft index\n  // prices array containing individual prices of a mint per nft index\n  // tokenPerBurn global price\n\n  console.log(ownerById)\n\n  const { nftId, name, previewImage, originalImage, fileType, description, metadata, tokenAmount, tokenSupply } = nft\n  const PRICE = prices[nft.nftId] || tokenPerBurn // here we get the price\n\n  const nftIndex = hasClaimed && hasClaimed.indexOf(nftId)\n\n  const MINTS = myMints[nftIndex] || 0\n\n  const MINTED = amounts[nftIndex] ? parseInt(amounts[nftIndex].toString()) : 0\n  const MAX_MINT = maxMintByNft[nftIndex] ? parseInt(maxMintByNft[nftIndex].toString()) : maxMintPerNft\n\n  const hasClaimedArr: any = hasClaimed[0]\n  const ownerByIdArr: any = ownerById[0]\n\n  const firstCharOfAccount = account != null && account.slice(0, 4)\n  const lastCharOfAccount = account != null && account.slice(-4)\n\n  const accountName = account != null && `${firstCharOfAccount}...${lastCharOfAccount}`\n\n  const loggedIn = account !== null\n\n  // console.log('?hasClaimed', hasClaimed)\n  // console.log('?ownerById', ownerById)\n\n  const walletCanClaim = maxMintPerNft === 0 || MINTED === undefined || MINTED < MAX_MINT\n\n  const price = Math.round(350 * 1.016282 ** amounts[nftIndex] * 100) / 100\n\n  const tokenIds = getTokenIds(nftId)\n  const isSupplyAvailable = currentDistributedSupply < totalSupplyDistributed\n  const walletOwnsNft = tokenIds && tokenIds.length > 0\n  const Icon = state.isOpen ? ChevronUpIcon : ChevronDownIcon\n\n  const fetchDetails = useCallback(async () => {\n    setState((prevState) => ({ ...prevState, isLoading: true }))\n    try {\n      const { methods } = getNftContract()\n      const nftCount = await methods.nftCount(nftId).call()\n      const nftBurnCount = await methods.nftBurnCount(nftId).call()\n\n      setState((prevState) => ({\n        ...prevState,\n        isLoading: false,\n        isDataFetched: true,\n        nftCount: parseInt(nftCount, 10),\n        nftBurnCount: parseInt(nftBurnCount, 10),\n      }))\n    } catch (error) {\n      console.error(error)\n    }\n  }, [nftId])\n\n  const handleClick = async () => {\n    if (state.isOpen) {\n      setState((prevState) => ({ ...prevState, isOpen: !prevState.isOpen }))\n    } else {\n      try {\n        await fetchDetails()\n      } catch (error) {\n        console.error(error)\n      } finally {\n        setState((prevState) => ({ ...prevState, isOpen: !prevState.isOpen }))\n      }\n    }\n  }\n\n  const handleSuccess = () => {\n    fetchDetails()\n    reInitialize()\n  }\n\n  const [onPresentClaimModal] = useModal(<ClaimNftModal nft={nft} onSuccess={handleSuccess} />)\n  const [onPresentBurnModal] = useModal(<BurnNftModal nft={nft} tokenIds={tokenIds} onSuccess={handleSuccess} />)\n  const [onPresentTransferModal] = useModal(\n    <TransferNftModal nft={nft} tokenIds={tokenIds} onSuccess={handleSuccess} />,\n  )\n\n  if (isInitialized && loggedIn && MINTS > 0) {\n    return (\n      <SmallCard isActive={walletOwnsNft}>\n        {fileType === 'mp4' && (\n          <video width=\"100%\" loop autoPlay muted>\n            <source src={originalImage} type=\"video/mp4\" />\n            <track kind=\"captions\" />\n          </video>\n        )}\n        {fileType !== 'mp4' && (\n          <Image src={originalImage} alt={name} originalLink={walletOwnsNft ? originalImage : null} />\n        )}\n        <CardBody>\n          <Header>\n            <Heading>{name}</Heading>\n            {isInitialized && walletCanClaim && (\n              <Tag outline variant=\"success\">\n                {TranslateString(526, 'Available')}\n              </Tag>\n            )}\n            {isInitialized && !walletCanClaim && (\n              <Tag outline variant=\"failure\">\n                Sold Out\n              </Tag>\n            )}\n            {isInitialized && tokenIds && (\n              <Tag outline variant=\"secondary\">\n                {TranslateString(999, 'In Wallet')}\n              </Tag>\n            )}\n          </Header>\n          {isInitialized && walletOwnsNft && (\n            <Button fullWidth variant=\"secondary\" mt=\"24px\" onClick={onPresentTransferModal}>\n              {TranslateString(999, 'Transfer')}\n            </Button>\n          )}\n        </CardBody>\n        <CardFooter p=\"2\">\n          {state.isOpen && (\n            <InfoBlock>\n              <Text as=\"p\" color=\"textSubtle\" mb=\"16px\" style={{ textAlign: 'center' }}>\n                {description}\n              </Text>\n              <InfoRow>\n                <Text>{TranslateString(999, 'Number minted')}:</Text>\n                <Value>\n                  {MINTED}/{tokenSupply}\n                </Value>\n              </InfoRow>\n              <InfoRow>\n                <Text>{TranslateString(999, 'Minted By Me')}:</Text>\n                <Value>{MINTS}</Value>\n              </InfoRow>\n            </InfoBlock>\n          )}\n        </CardFooter>\n      </SmallCard>\n    )\n  }\n\n  return (\n    <Page>\n      <StyledNotFound>\n        <LogoIcon width=\"64px\" mb=\"8px\" />\n        <Text mb=\"16px\">{TranslateString(999, 'loading...')}</Text>\n      </StyledNotFound>\n    </Page>\n  )\n}\n\nexport default NftCard\n","import styled from 'styled-components'\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\n\nconst NftGrid = styled(BaseLayout)`\n  padding-bottom: 24px;\n  padding-top: 24px;\n\n  & > div {\n    grid-column: 2 / 6;\n\n    ${({ theme }) => theme.mediaQueries.sm} {\n      grid-column: span 6;\n    }\n  }\n`\n\nexport default NftGrid\n","import React, { useState, useContext, useCallback } from 'react'\nimport orderBy from 'lodash/orderBy'\nimport nfts from 'config/constants/epic'\nimport NftCard from './NftCard'\nimport NftGrid from './NftGrid'\nimport { NftProviderContext } from '../contexts/NftProvider'\n\nconst NftList = () => {\n  const { myMints, hasClaimed } = useContext(NftProviderContext)\n\n  const filteredNft = []\n\n  nfts.forEach(function (nft, key) {\n    const { nftId, name, previewImage, originalImage, description } = nft\n\n    const nftIndex = hasClaimed && hasClaimed.indexOf(nftId)\n\n    const MINTS = myMints[nftIndex] || 0\n\n    if (MINTS > 0) {\n      filteredNft.push(nft)\n    }\n  })\n\n  return (\n    <NftGrid>\n      {orderBy(filteredNft, 'sortOrder').map((nft) => (\n        <div key={nft.name}>\n          <NftCard nft={nft} />\n        </div>\n      ))}\n    </NftGrid>\n  )\n}\n\nexport default NftList\n","import React, { useContext } from 'react'\nimport { Card, CardBody, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport nfts from 'config/constants/epic'\nimport { NftProviderContext } from '../contexts/NftProvider'\nimport InfoRow from './InfoRow'\n\nconst NftProgressSimple = () => {\n  const TranslateString = useI18n()\n  const { isInitialized, currentDistributedSupply, totalSupplyDistributed, countBurnt, myMints } = useContext(\n    NftProviderContext,\n  )\n\n  let myNFTs = 0\n\n  nfts.forEach(function (nft, key) {\n    const { nftId } = nft\n    const MINTS = myMints[nftId] || 0\n    myNFTs += MINTS\n  })\n\n  return (\n    <Card>\n      <CardBody>\n        <InfoRow>\n          <Text>{TranslateString(999, 'My Epic NFTs')}:</Text>\n          <Text>\n            <strong>{myNFTs}</strong>\n          </Text>\n        </InfoRow>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default NftProgressSimple\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { NftProviderContext } from '../contexts/NftProvider'\nimport NftProgress from './NftProgress'\nimport NftProgressSimple from './NftProgressSimple'\nimport StatusCard from './StatusCard'\n\nconst StyledNtfInfo = styled.div`\n  align-items: start;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`\n\nconst NftInfo = () => {\n  const { canBurnNft } = useContext(NftProviderContext)\n\n  return <NftProgressSimple />\n}\n\nexport default NftInfo\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, LogoIcon, Text, Button } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport { useHistory } from 'react-router-dom'\nimport HowItWorks from './components/HowItWorks'\nimport NftList from './components/NftList'\nimport NftProvider from './contexts/NftProvider'\nimport NftInfo from './components/NftInfo'\n\nconst StyledHero = styled.div`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 32px;\n`\n\nconst StyledNotFound = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 64px);\n  justify-content: center;\n`\n\nconst CustomButton = styled(Button)`\n  margin-right: 20px;\n`\n\nconst GoldenButton = styled(Button)`\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(110, 80, 20, 0.4), inset 0 -2px 5px 1px rgba(139, 66, 8, 1),\n    inset 0 -1px 1px 3px rgba(250, 227, 133, 1);\n  background-image: linear-gradient(160deg, #a54e07, #b47e11, #fef1a2, #bc881b, #a54e07);\n  border: 1px solid #a55d07;\n  color: rgb(120, 50, 5);\n  text-shadow: 0 2px 2px rgba(250, 227, 133, 1);\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  background-size: 100% 100%;\n  background-position: center;\n\n  &:focus,\n  &:hover {\n    background-size: 150% 150%;\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23), inset 0 -2px 5px 1px #b17d10,\n      inset 0 -1px 1px 3px rgba(250, 227, 133, 1);\n    border: 1px solid rgba(165, 93, 7, 0.6);\n    color: rgba(120, 50, 5, 0.8);\n  }\n  &:active {\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(110, 80, 20, 0.4), inset 0 -2px 5px 1px #b17d10,\n      inset 0 -1px 1px 3px rgba(250, 227, 133, 1);\n  }\n`\n\nconst Nft = () => {\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const history = useHistory()\n\n  if (account) {\n    return (\n      <NftProvider>\n        <Page>\n          <StyledHero>\n            <Heading as=\"h1\" size=\"xl\" color=\"#9f0d0d\" mb=\"24px\">\n              My Epic Collection\n            </Heading>\n            <CustomButton onClick={() => history.push(`my-collection`)} mt=\"24px\">\n              Base and Rare NFTs\n            </CustomButton>\n            <CustomButton variant=\"subtle\" onClick={() => history.push(`my-epic-collection`)} mt=\"24px\">\n              Epic NFTs\n            </CustomButton>\n            <GoldenButton onClick={() => history.push(`my-legendary-collection`)} mt=\"24px\">\n              Legendary NFTs\n            </GoldenButton>\n          </StyledHero>\n          <NftInfo />\n          <NftList />\n        </Page>\n      </NftProvider>\n    )\n  }\n\n  return (\n    <Page>\n      <StyledNotFound>\n        <LogoIcon width=\"64px\" mb=\"8px\" />\n        <Text mb=\"16px\">{TranslateString(999, 'Empty Collection')}</Text>\n      </StyledNotFound>\n    </Page>\n  )\n}\n\nexport default Nft\n"],"sourceRoot":""}