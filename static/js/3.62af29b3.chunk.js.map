{"version":3,"sources":["config/constants/nfts.ts","utils/formatBalance.ts","utils/erc20.ts","hooks/useBlock.ts","utils/callHelpers.ts","config/constants/epic.ts","hooks/useApprove.ts"],"names":["NftFarm","NFT","AMOUNT_TO_CLAIM","Nfts","name","metadata","description","previewImage","originalImage","fileType","blurImage","sortOrder","nftId","tokenAmount","tokenSupply","nftFarmContract","nftContract","getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","getContract","provider","address","Web3","eth","Contract","erc20","getAllowance","lpContract","masterChefContract","account","a","methods","allowance","options","call","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","useBlock","useContext","BlockContext","approve","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","times","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","EpicNftFarm","useApprove","dispatch","useDispatch","useWallet","useMasterchef","onApprove","useCallback","fetchFarmUserDataAsync","useSousApprove","sousId","useSousChef","updateUserAllowance","useNftApprove","tokenContract","spenderAddress"],"mappings":"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","file":"static/js/3.62af29b3.chunk.js","sourcesContent":["import { Nft } from './types'\n\nexport const NftFarm = '0x08d2cBc5EFd1B56034F4628bB32e947C0d86BbB1'\nexport const NFT = '0x3F7C7C24fFA2ceFfaACE11B39D5b8a575A4B0674'\nexport const AMOUNT_TO_CLAIM = '10'\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Count Pepes Chocula',\n    metadata: 'tier-NFT-base-dark-chocolate.json',\n    description: 'Dipped in chocolate and ready for a bite. Part of the base tier of Vlad NFTs.',\n    previewImage: 'preview-base-dark-chocolate.jpg',\n    originalImage:\n      'https://ipfs.io/ipfs/QmX9UuF41nfhnESX3DnVHhC4XwuYAcLEReGyN4CtE8P7Bg?filename=NFT-base-dark-chocolate.mp4',\n    fileType: 'mp4',\n    blurImage: '',\n    sortOrder: 0,\n    nftId: 0,\n    tokenAmount: 10,\n    tokenSupply: 2222,\n    nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\n    nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\n  },\n  {\n    name: 'Vlad Pepes Drakul',\n    metadata: 'tier-NFT-base-main-nopaint.json',\n    description: 'The legend behind the meme in all his original glory. Part of the base tier of Vlad NFTs',\n    previewImage: 'preview-base-main-nopaint.jpg',\n    originalImage:\n      'https://ipfs.io/ipfs/QmWckPrzbjvf8jqUpdQ7jKLzdaSBTyPSV6x6obSUHHipqc?filename=NFT-base-main-nopaint.mp4',\n    fileType: 'mp4',\n    blurImage: '',\n    sortOrder: 1,\n    nftId: 1,\n    tokenAmount: 10,\n    tokenSupply: 2222,\n    nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\n    nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\n  },\n  {\n    name: 'Pepes in Stone',\n    metadata: 'tier-NFT-base-marble.json',\n    description:\n      'The count has turned into a marble statue ready for display in the halls of Vladhalla. Part of the base tier of Vlad NFTs.',\n    previewImage: 'preview-base-marble.jpg',\n    originalImage: 'https://ipfs.io/ipfs/QmSnz85drLjCD4qNgaMwHFC6PFEkGrmYhM1LpHwZWpEWaQ?filename=NFT-base-marble.mp4',\n    fileType: 'mp4',\n    blurImage: '',\n    sortOrder: 2,\n    nftId: 2,\n    tokenAmount: 10,\n    tokenSupply: 2222,\n    nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\n    nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\n  },\n  {\n    name: 'The path to Vladhalla',\n    metadata: '',\n    description: 'All who seek to find the path to Vladhalla must have strong hands along the way to immortality.',\n    previewImage: 'preview-path-to-vladhalla.jpg',\n    originalImage:\n      'https://ipfs.io/ipfs/QmQWAeV3aAWD2Kbvxmtt4H874AEf7M7N5FcBos4iZbkRcj?filename=NFT-rare-path-to-vladhalla.mp4',\n    fileType: 'mp4',\n    blurImage: '',\n    sortOrder: 3,\n    nftId: 3,\n    tokenAmount: 100,\n    tokenSupply: 666,\n    nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\n    nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\n  },\n  {\n    name: 'Painted Pepe',\n    metadata: '',\n    description:\n      'As an homage to the original Vlad Pepes Drakul this retains his painted face hang him in your gallery for eternal viewing.',\n    previewImage: 'preview-painted-pepes.jpg',\n    originalImage:\n      'https://ipfs.io/ipfs/QmRqe92vpppkNS2aihmdvswHstAiHAF4jC2KUAiec5LKKk?filename=NFT-rare-painted-pepes.mp4',\n    fileType: 'mp4',\n    blurImage: '',\n    sortOrder: 4,\n    nftId: 4,\n    tokenAmount: 100,\n    tokenSupply: 666,\n    nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\n    nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\n  },\n  {\n    name: 'All Hail BOBA',\n    metadata: '',\n    description: 'A coin like no other. It grants the holder eternal life when stored in their wallet.',\n    previewImage: 'preview-all-hail-vlad.jpg',\n    originalImage:\n      'https://ipfs.io/ipfs/QmWmdegkuvXShBs47G4GPqxfwnVbtKY5pYeAoAN3Xy37KV?filename=NFT-rare-all-hail-vlad.mp4',\n    fileType: 'mp4',\n    blurImage: '',\n    sortOrder: 5,\n    nftId: 5,\n    tokenAmount: 100,\n    tokenSupply: 666,\n    nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\n    nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\n  },\n]\n\nexport default Nfts\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import { Nft } from './types'\n\nexport const EpicNftFarm = '0x6a63AF63675D3c9D498DF43Aa163F9243E7b4646'\nexport const NFT = '0x3F7C7C24fFA2ceFfaACE11B39D5b8a575A4B0674'\nexport const AMOUNT_TO_CLAIM = '10'\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Silver Pepes',\n    metadata: '',\n    description:\n      \"The count has had an epic existence sure, but it has not been without many attempts at his life. This artist's rendition pays homage to the time he was frozen in Carbonite ...oh wait, wrong story. Our bad, pretty slick tho right?\",\n    previewImage: 'preview-silver-pepe.jpg',\n    originalImage:\n      'https://ipfs.io/ipfs/QmaPP3CqB8iNcB9b9NCZVytNiaxZcJWt7Kk1vnHWwRL7hQ?filename=NFT-epic-silver-pepes.mp4',\n    fileType: 'mp4',\n    blurImage: '',\n    sortOrder: 0,\n    nftId: 0,\n    tokenAmount: 350,\n    tokenSupply: 66,\n    nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\n    nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\n  },\n  {\n    name: 'Bank of Vladhalla',\n    metadata: '',\n    description:\n      \"They say when you leave this life you can't take it with you... Well, who's leaving? That's for mortals to worry about.\",\n    previewImage: 'preview-bank-of-vlad.png',\n    originalImage:\n      'https://ipfs.io/ipfs/Qma87NMJAu33nQuCRvoAK4MwP9CBwhGsLkQdTptM6uxoyp?filename=NFT-epic-bank-of-vladhalla.mp4',\n    fileType: 'mp4',\n    blurImage: '',\n    sortOrder: 1,\n    nftId: 1,\n    tokenAmount: 350,\n    tokenSupply: 66,\n    nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\n    nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\n  },\n  {\n    name: 'Gates of Vladhalla',\n    metadata: '',\n    description:\n      'Tales have been written of the select few who have made it this far. The  sheer majesty of these very gates would make the hairs on their arms stand on end. Only the immortal shall pass through - will you?',\n    previewImage: 'preview-gate-of-vlad.jpg',\n    originalImage:\n      'https://ipfs.io/ipfs/QmW1az8XriRqdx2zXY7w71XFxXUEfH5hUsyZTzwGBe7gfh?filename=NFT-epic-gates-of-vladhalla.png',\n    fileType: 'png',\n    blurImage: '',\n    sortOrder: 2,\n    nftId: 2,\n    tokenAmount: 350,\n    tokenSupply: 66,\n    nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\n    nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\n  },\n]\n\nexport default Nfts\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n\n// Approve an NFT\nexport const useNftApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n"],"sourceRoot":""}