{"version":3,"sources":["utils/translateTextHelpers.ts","hooks/useI18n.ts","hooks/useWeb3.ts","hooks/useContract.ts","utils/formatBalance.ts","hooks/useBlock.ts","utils/callHelpers.ts","hooks/useApprove.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","hooks/useHarvest.ts","components/UnlockButton.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","config/constants/index.ts","components/Tags.tsx","hooks/useStake.ts","config/index.ts","components/layout/Flex.tsx","hooks/useUnstake.ts","views/Pools/components/Card.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Coming.tsx","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Syrup.tsx"],"names":["variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","data","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","useContext","TranslationsContext","length","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","useWeb3","ethereum","useWallet","refEth","useRef","useState","web3","setweb3","useEffect","current","useContract","abi","address","contractOptions","eth","Contract","contract","setContract","useERC20","erc20","useCake","getCakeAddress","useRabbitMintingFarm","nftFarm","usePancakeRabbits","nft","useLottery","lottery","getLotteryAddress","useMasterchef","masterChef","getMasterChefAddress","useSousChef","id","config","poolsConfig","pool","sousId","rawAbi","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","process","getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","useBlock","BlockContext","approve","lpContract","masterChefContract","account","a","methods","options","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","times","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","useApprove","dispatch","useDispatch","onApprove","useCallback","fetchFarmUserDataAsync","useSousApprove","updateUserAllowance","useNftApprove","tokenContract","spenderAddress","StyledSpacer","styled","div","props","size","Spacer","s","spacing","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","map","child","i","useHarvest","farmPid","onReward","txHash","useAllHarvest","farmPids","harvestPromises","reduce","accum","Promise","all","useSousHarvest","isUsingBnb","handleHarvest","updateUserPendingReward","updateUserBalance","UnlockButton","TranslateString","connect","reset","onPresentConnectModal","useWalletModal","onClick","StyledInputWrapper","input","radii","default","StyledInput","Input","endAdornment","onChange","placeholder","startAdornment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","primary","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","toLocaleString","farmsConfig","filter","farm","isCommunity","tokenSymbol","NoFeeTag","variant","outline","startIcon","CoreTag","CommunityTag","BinanceTag","useSousStake","handleStake","updateUserStakedBalance","onStake","useStake","console","info","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","FlexLayout","SYRUPIDS","useSousUnstake","isOldSyrup","onUnstake","useUnstake","Card","card","background","isFinished","isActive","CardTitle","Balance","Label","textSubtle","DetailPlaceholder","Value","Footer","isDark","Coming","style","padding","role","src","width","height","alt","as","href","external","fullWidth","mb","flex","StyledLabel","StyledText","Text","isDisabled","color","textDisabled","fontSize","unit","previousValue","bold","start","end","duration","separator","defaultProps","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","e","currentTarget","handleSelectMax","title","disabled","WithdrawModal","CompoundModal","earnings","BalanceRow","Number","Title","ActionLink","OldSyrupTitle","hasBalance","target","StyledButton","button","undefined","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","CORE","COMMUNITY","StyledFooter","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","projectLink","totalStaked","blocksRemaining","blocksUntilStart","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","marginBottom","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","image","stakingTokenName","stakingTokenAddress","apy","tokenDecimals","startBlock","endBlock","userData","stakingLimit","isBnbPool","stakingTokenContract","block","requestedApproval","setRequestedApproval","allowance","stakingTokenBalance","stakedBalance","pendingReward","Math","QuoteToken","SYRUP","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","error","display","alignItems","HarvestButton","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","Hero","Farm","path","farms","useFarms","pools","usePools","bnbPriceUSD","usePriceBnbBusd","poolsWithApy","rewardTokenFarm","f","stakingTokenFarm","stakingTokenPriceInBNB","tokenPriceVsQuote","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","BUSD","priceToBnb","quoteTokenSymbol","tokenPerBlock","totalStakingTokenInPool","partition","finishedPools","openPools","Page","Divider","Flex","exact","orderBy"],"mappings":"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","file":"static/js/17.a999623f.chunk.js","sourcesContent":["import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || httpProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getMasterChefAddress, getCakeAddress, getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport nftFarm from 'config/abi/NftFarm.json'\nimport nft from 'config/abi/NFT.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const nftMintingFarmAbi = (nftFarm as unknown) as AbiItem\n  return useContract(nftMintingFarmAbi, address)\n}\n\nexport const usePancakeRabbits = (address: string) => {\n  const nftAbi = (nft as unknown) as AbiItem\n  return useContract(nftAbi, address)\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useSousChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport default useContract\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n\n// Approve an NFT\nexport const useNftApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: #B28E59 !important;\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {depositFeeBP > 0 ? (\n        <StyledMaxText>\n          {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP / 10000).toString()}{' '}\n          {symbol}\n        </StyledMaxText>\n      ) : null}\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nconst RiskTag = ({ risk }) => (\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\n    Risk {risk}\n  </Tag>\n)\n\nconst CoreTag = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 4px;\n  }\n`\n\nexport default FlexLayout\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n  color: #9f0d0d;\n`\n\nexport default CardTitle\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Image, Button } from '@pancakeswap-libs/uikit'\nimport { CommunityTag } from 'components/Tags'\nimport useI18n from 'hooks/useI18n'\nimport Card from './Card'\nimport CardTitle from './CardTitle'\n\nconst Balance = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 40px;\n  font-weight: 600;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  margin-bottom: 16px;\n`\n\nconst DetailPlaceholder = styled.div`\n  display: flex;\n  font-size: 14px;\n`\nconst Value = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 14px;\n`\n\nconst Footer = styled.div`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  padding: 24px;\n`\nconst Coming: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <div style={{ padding: '24px' }}>\n        <CardTitle>\n          {TranslateString(414, 'Your Project?')}{' '}\n          <span role=\"img\" aria-label=\"eyes\">\n            👀\n          </span>\n        </CardTitle>\n        <Image src=\"/images/nft-question.svg\" width={64} height={64} alt=\"Your project here\" />\n        <Balance>???</Balance>\n        <Label>{TranslateString(416, 'Create a pool for your token')}</Label>\n        <Button\n          variant=\"secondary\"\n          as=\"a\"\n          href=\"https://docs.google.com/forms/d/e/1FAIpQLScGdT5rrVMr4WOWr08pvcroSeuIOtEJf1sVdQGVdcAOqryigQ/viewform\"\n          external\n          fullWidth\n          mb=\"16px\"\n        >\n          {TranslateString(418, 'Apply Now')}\n        </Button>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          <Value>??</Value>\n        </DetailPlaceholder>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label=\"syrup\">\n              🥞{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Value>??? CAKE</Value>\n        </DetailPlaceholder>\n      </div>\n      <Footer>\n        <CommunityTag />\n      </Footer>\n    </Card>\n  )\n}\n\nexport default Coming\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#EDC97E`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  🥞{' '}\n                </span>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n            {sousId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${tokenName} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n              🥞{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePriceBnbBusd, usePools } from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            SYRUP Pool\n          </Heading>\n          <ul>\n            <li>Stake CAKE to earn new tokens.</li>\n            <li>You can unstake at any time.</li>\n            <li>Rewards are calculated per block.</li>\n          </ul>\n        </div>\n        <img src=\"/images/syrup.png\" alt=\"SYRUP POOL icon\" width={410} height={191} />\n      </Hero>\n      <PoolTabButtons />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n            <Coming />\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n"],"sourceRoot":""}