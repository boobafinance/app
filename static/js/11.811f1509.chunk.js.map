{"version":3,"sources":["config/constants/nfts.ts","utils/formatBalance.ts","utils/erc20.ts","hooks/useBlock.ts","utils/callHelpers.ts","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/identity.js","hooks/useTokenBalance.ts","hooks/useApprove.ts","hooks/useAllowance.ts","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/orderBy.js","../node_modules/lodash/_baseOrderBy.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/lodash/_baseMap.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseSortBy.js","../node_modules/lodash/_compareMultiple.js","../node_modules/lodash/_compareAscending.js","views/Nft/components/InfoRow.tsx","views/Nft/components/Image.tsx","views/Nft/utils/contracts.ts","views/Nft/contexts/NftProvider.tsx","views/Nft/components/ClaimNftModal.tsx","views/Nft/components/BurnNftModal.tsx","views/Nft/components/TransferNftModal.tsx","views/Nft/components/NftCard/index.tsx","views/Nft/components/NftGrid.tsx","views/Nft/components/NftList.tsx","views/Nft/components/NftProgressSimple.tsx","views/Nft/components/NftInfo.tsx","views/Nft/index.tsx"],"names":["NftFarm","NFT","AMOUNT_TO_CLAIM","Nfts","name","metadata","description","previewImage","originalImage","fileType","blurImage","sortOrder","nftId","tokenAmount","tokenSupply","nftFarmContract","nftContract","getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","getContract","provider","address","Web3","eth","Contract","erc20","getAllowance","lpContract","masterChefContract","account","a","methods","allowance","options","call","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","useBlock","useContext","BlockContext","approve","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","times","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","isObject","require","module","exports","key","srcValue","object","undefined","Object","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","cakeContract","cakeABI","getCakeAddress","supply","fetchTotalSupply","useBurnedBalance","setBalance","bal","fetchBalance","useTokenBalance","useWallet","ethereum","fastRefresh","res","useApprove","dispatch","useDispatch","useMasterchef","onApprove","useCallback","fetchFarmUserDataAsync","useSousApprove","sousId","useSousChef","updateUserAllowance","useNftApprove","tokenContract","spenderAddress","useNftAllowance","dependency","setAllowance","console","log","fetch","baseMatches","baseMatchesProperty","identity","isArray","property","baseForOwn","baseEach","createBaseEach","baseOrderBy","collection","iteratees","orders","guard","arrayMap","baseGet","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","length","iteratee","index","result","other","baseIsMatch","getMatchData","matchesStrictComparable","source","matchData","Stack","baseIsEqual","customizer","noCustomizer","data","objValue","stack","COMPARE_PARTIAL_FLAG","isStrictComparable","keys","get","hasIn","isKey","toKey","path","baseHasIn","hasPath","castPath","isArguments","isIndex","isLength","hasFunc","baseProperty","basePropertyDeep","isArrayLike","Array","baseFor","createBaseFor","fromRight","keysFunc","iterable","props","eachFunc","array","comparer","sort","compareAscending","objCriteria","criteria","othCriteria","ordersLength","isSymbol","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","InfoRow","styled","div","Container","theme","colors","borderColor","StyledImage","img","Image","src","alt","originalLink","href","target","rel","getNftContract","contractOptions","nftAbi","nft","getFromWayArray","v","t","i","push","fromWei","getToFloat","parseInt","getToInt","parseFloat","NftProviderContext","createContext","NftProvider","children","isMounted","useRef","isInitialized","hasClaimed","ownerById","countBurnt","startBlockNumber","endBlockNumber","totalSupplyDistributed","currentDistributedSupply","nftMap","allowMultipleClaims","rarity","priceMultiplier","maxMintPerNft","tokenPerBurn","amounts","maxMintByNft","prices","myMints","state","setState","currentBlock","multicall","nftFarm","startBlockNumberArr","endBlockNumberArr","countBurntArr","totalSupplyDistributedArr","currentDistributedSupplyArr","allowMultipleClaimsArr","rarityArr","priceMultiplierArr","maxMintPerNftArr","tokenPerBurnArr","prevState","error","fetchContractData","params","getMinted","getTokenIdAndBunnyId","tokenOfOwnerByIndex","tokenId","getBunnyId","tokenIdPromises","Promise","all","tokenIdsOwnedByWallet","reduce","accum","association","fetchNonLoggedInContractData","current","canBurnNft","Provider","getTokenIds","reInitialize","Value","Text","ModalContent","Actions","ClaimNftModal","onSuccess","onDismiss","isLoading","setIsLoading","pendingTx","setPendingTx","setError","TranslateString","useI18n","nftMintingContract","useRabbitMintingFarm","contraToken","useERC20","getLifeAddress","cakeBalance","cakeInWallet","handleConfirm","mintNFT","title","color","mb","fullWidth","disabled","onClick","BurnNftModal","tokenIds","accepted","setAccepted","burnNFT","style","alignItems","display","checked","scale","onChange","ml","cursor","variant","Label","label","text","TransferNftModal","setValue","usePancakeRabbits","utils","isAddress","transferFrom","htmlFor","id","type","placeholder","evt","inputValue","isWarning","Header","DetailsButton","Button","attrs","InfoBlock","ViewNft","NftCard","isOpen","nftCount","nftBurnCount","history","useHistory","firstCharOfAccount","slice","lastCharOfAccount","loggedIn","nftIndex","indexOf","MINTS","MINTED","MAX_MINT","walletCanClaim","isSupplyAvailable","walletOwnsNft","Icon","ChevronUpIcon","ChevronDownIcon","fetchDetails","isDataFetched","handleClick","handleSuccess","useModal","onPresentClaimModal","onPresentBurnModal","onPresentTransferModal","isActive","outline","mt","p","endIcon","width","as","textAlign","NftGrid","BaseLayout","mediaQueries","sm","NftList","orderBy","nfts","map","NftProgressSimple","NftInfo","StyledHero","textSubtle","CustomButton","GoldenButton","Nft","Page","size"],"mappings":"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","file":"static/js/11.811f1509.chunk.js","sourcesContent":["import { Nft } from './types'\n\nexport const NftFarm = '0x08d2cBc5EFd1B56034F4628bB32e947C0d86BbB1'\nexport const NFT = '0x3F7C7C24fFA2ceFfaACE11B39D5b8a575A4B0674'\nexport const AMOUNT_TO_CLAIM = '10'\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Count Pepes Chocula',\n    metadata: 'tier-NFT-base-dark-chocolate.json',\n    description: 'Dipped in chocolate and ready for a bite. Part of the base tier of Vlad NFTs.',\n    previewImage: 'preview-base-dark-chocolate.jpg',\n    originalImage:\n      'https://ipfs.io/ipfs/QmX9UuF41nfhnESX3DnVHhC4XwuYAcLEReGyN4CtE8P7Bg?filename=NFT-base-dark-chocolate.mp4',\n    fileType: 'mp4',\n    blurImage: '',\n    sortOrder: 0,\n    nftId: 0,\n    tokenAmount: 10,\n    tokenSupply: 2222,\n    nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\n    nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\n  },\n  {\n    name: 'Vlad Pepes Drakul',\n    metadata: 'tier-NFT-base-main-nopaint.json',\n    description: 'The legend behind the meme in all his original glory. Part of the base tier of Vlad NFTs',\n    previewImage: 'preview-base-main-nopaint.jpg',\n    originalImage:\n      'https://ipfs.io/ipfs/QmWckPrzbjvf8jqUpdQ7jKLzdaSBTyPSV6x6obSUHHipqc?filename=NFT-base-main-nopaint.mp4',\n    fileType: 'mp4',\n    blurImage: '',\n    sortOrder: 1,\n    nftId: 1,\n    tokenAmount: 10,\n    tokenSupply: 2222,\n    nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\n    nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\n  },\n  {\n    name: 'Pepes in Stone',\n    metadata: 'tier-NFT-base-marble.json',\n    description:\n      'The count has turned into a marble statue ready for display in the halls of Vladhalla. Part of the base tier of Vlad NFTs.',\n    previewImage: 'preview-base-marble.jpg',\n    originalImage: 'https://ipfs.io/ipfs/QmSnz85drLjCD4qNgaMwHFC6PFEkGrmYhM1LpHwZWpEWaQ?filename=NFT-base-marble.mp4',\n    fileType: 'mp4',\n    blurImage: '',\n    sortOrder: 2,\n    nftId: 2,\n    tokenAmount: 10,\n    tokenSupply: 2222,\n    nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\n    nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\n  },\n  {\n    name: 'The path to Vladhalla',\n    metadata: '',\n    description: 'All who seek to find the path to Vladhalla must have strong hands along the way to immortality.',\n    previewImage: 'preview-path-to-vladhalla.jpg',\n    originalImage:\n      'https://ipfs.io/ipfs/QmQWAeV3aAWD2Kbvxmtt4H874AEf7M7N5FcBos4iZbkRcj?filename=NFT-rare-path-to-vladhalla.mp4',\n    fileType: 'mp4',\n    blurImage: '',\n    sortOrder: 3,\n    nftId: 3,\n    tokenAmount: 100,\n    tokenSupply: 666,\n    nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\n    nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\n  },\n  {\n    name: 'Painted Pepe',\n    metadata: '',\n    description:\n      'As an homage to the original Vlad Pepes Drakul this retains his painted face hang him in your gallery for eternal viewing.',\n    previewImage: 'preview-painted-pepes.jpg',\n    originalImage:\n      'https://ipfs.io/ipfs/QmRqe92vpppkNS2aihmdvswHstAiHAF4jC2KUAiec5LKKk?filename=NFT-rare-painted-pepes.mp4',\n    fileType: 'mp4',\n    blurImage: '',\n    sortOrder: 4,\n    nftId: 4,\n    tokenAmount: 100,\n    tokenSupply: 666,\n    nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\n    nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\n  },\n  {\n    name: 'All Hail BOBA',\n    metadata: '',\n    description: 'A coin like no other. It grants the holder eternal life when stored in their wallet.',\n    previewImage: 'preview-all-hail-vlad.jpg',\n    originalImage:\n      'https://ipfs.io/ipfs/QmWmdegkuvXShBs47G4GPqxfwnVbtKY5pYeAoAN3Xy37KV?filename=NFT-rare-all-hail-vlad.mp4',\n    fileType: 'mp4',\n    blurImage: '',\n    sortOrder: 5,\n    nftId: 5,\n    tokenAmount: 100,\n    tokenSupply: 666,\n    nftFarmContract: '0x3627Ca89675b42489aD39619A92dd0Ce24CA90bB',\n    nftContract: '0xa521D5FA64D0aAdB4ee607BAb20142aA173e4392',\n  },\n]\n\nexport default Nfts\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n\n// Approve an NFT\nexport const useNftApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useCake, useLottery } from './useContract'\nimport { getAllowance } from '../utils/erc20'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const lotteryContract = useLottery()\n  const cakeContract = useCake()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await getAllowance(cakeContract, lotteryContract, account)\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && cakeContract && cakeContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, cakeContract, lotteryContract])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n\n// Retrieve NFT allowance\nexport const useNftAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        console.log(e.toString())\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","import styled from 'styled-components'\n\nconst InfoRow = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n`\n\nexport default InfoRow\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface ImageProps {\n  src: string\n  alt: string\n  originalLink?: string\n}\n\nconst Container = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  padding-bottom: 100%;\n`\n\nconst StyledImage = styled.img`\n  position: absolute;\n  width: 100%;\n  top: 0;\n  left: 0;\n  transition: opacity 1s linear;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 32px 32px 0 0;\n`\n\nconst Image: React.FC<ImageProps> = ({ src, alt, originalLink }) => {\n  const previewImage = <StyledImage src={src} alt={alt} />\n\n  return (\n    <Container>\n      {originalLink ? (\n        <a href={originalLink} target=\"_blank\" rel=\"noreferrer noopener\">\n          {previewImage}\n        </a>\n      ) : (\n        previewImage\n      )}\n    </Container>\n  )\n}\n\nexport default Image\n","import { AbiItem, fromWei } from 'web3-utils'\nimport { getContract } from 'utils/web3'\nimport { ContractOptions } from 'web3-eth-contract'\nimport nftFarm from 'config/abi/NftFarm.json'\nimport nft from 'config/abi/NFT.json'\nimport { NftFarm, NFT } from 'config/constants/nfts'\nimport BigNumber from 'bignumber.js'\n// TODO: Figure out how to add current account to contracts to write methods can be used\n\nexport const getNftMintingContract = (contractOptions?: ContractOptions) => {\n  const nftMintingFarmAbi = (nftFarm as unknown) as AbiItem\n  return getContract(nftMintingFarmAbi, NftFarm, contractOptions)\n}\n\nexport const getNftContract = (contractOptions?: ContractOptions) => {\n  const nftAbi = (nft as unknown) as AbiItem\n  return getContract(nftAbi, NFT, contractOptions)\n}\n\nexport const getFromWei = (v: any) => {\n  if (!v) return 0\n  return parseFloat(fromWei(v.toString(), 'ether'))\n}\n\nexport const getFromWayArray = (v: any) => {\n  if (!v) return []\n  const array = []\n  const t = v.length\n  for (let i = 0; i < t; i++) {\n    if (!v[i]) {\n      array.push(0)\n    } else {\n      array.push(fromWei(v[i].toString(), 'ether'))\n    }\n  }\n  return array\n}\n\nexport const getToFloat = (v: any) => {\n  if (!v) return []\n  const array = []\n  if (!v) return []\n  const t = v.length\n  for (let i = 0; i < t; i++) {\n    if (!v[i]) {\n      array.push(0)\n    } else {\n      array.push(parseInt(v[i].toString()))\n    }\n  }\n  return array\n}\n\nexport const getToInt = (v: any) => {\n  const array = []\n  if (!v) return []\n  const t = v.length\n  for (let i = 0; i < t; i++) {\n    if (!v[i]) {\n      array.push(0)\n    } else {\n      array.push(parseFloat(v[i].toString()))\n    }\n  }\n  return array\n}\n\nexport default getNftMintingContract\n","import React, { createContext, ReactNode, useEffect, useRef, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useBlock from 'hooks/useBlock'\nimport nftFarm from 'config/abi/NftFarm.json'\nimport { NftFarm } from 'config/constants/nfts'\nimport multicall from 'utils/multicall'\nimport { getNftContract, getFromWei, getToFloat, getToInt, getFromWayArray } from '../utils/contracts'\n\ninterface NftProviderProps {\n  children: ReactNode\n}\n\ntype BunnyMap = {\n  [key: number]: number[]\n}\n\ntype State = {\n  isInitialized: boolean\n  hasClaimed: number[]\n  ownerById: number[]\n  amounts: number[]\n  maxMintByNft: number[]\n  prices: number[]\n  myMints: number[]\n  countBurnt: number\n  endBlockNumber: number\n  startBlockNumber: number\n  totalSupplyDistributed: number\n  currentDistributedSupply: number\n  balanceOf: number\n  nftMap: BunnyMap\n\n  allowMultipleClaims: boolean\n  rarity: string\n  priceMultiplier: number\n  maxMintPerNft: number\n  tokenPerBurn: number\n}\n\ntype Context = {\n  canBurnNft: boolean\n  getTokenIds: (nftId: number) => number[]\n  reInitialize: () => void\n} & State\n\nexport const NftProviderContext = createContext<Context | null>(null)\n\nconst NftProvider: React.FC<NftProviderProps> = ({ children }) => {\n  const isMounted = useRef(true)\n  const [state, setState] = useState<State>({\n    isInitialized: false,\n    hasClaimed: [],\n    ownerById: [],\n    countBurnt: 0,\n    startBlockNumber: 0,\n    endBlockNumber: 0,\n    totalSupplyDistributed: 0,\n    currentDistributedSupply: 0,\n    balanceOf: 0,\n    nftMap: {},\n\n    allowMultipleClaims: true,\n    rarity: '',\n    priceMultiplier: 0,\n    maxMintPerNft: 0,\n    tokenPerBurn: 0,\n\n    amounts: [],\n    maxMintByNft: [],\n    prices: [],\n    myMints: [],\n  })\n  const { account } = useWallet()\n  const currentBlock = useBlock()\n\n  const { isInitialized } = state\n\n  // Static data\n  useEffect(() => {\n    const fetchContractData = async () => {\n      try {\n        const [\n          startBlockNumberArr,\n          endBlockNumberArr,\n          countBurntArr,\n          totalSupplyDistributedArr,\n          currentDistributedSupplyArr,\n\n          allowMultipleClaimsArr,\n          rarityArr,\n          priceMultiplierArr,\n          maxMintPerNftArr,\n          tokenPerBurnArr,\n        ] = await multicall(nftFarm, [\n          { address: NftFarm, name: 'startBlockNumber' },\n          { address: NftFarm, name: 'endBlockNumber' },\n          { address: NftFarm, name: 'countBurnt' },\n          { address: NftFarm, name: 'totalSupplyDistributed' },\n          { address: NftFarm, name: 'currentDistributedSupply' },\n          { address: NftFarm, name: 'allowMultipleClaims' },\n          { address: NftFarm, name: 'rarity' },\n          { address: NftFarm, name: 'priceMultiplier' },\n          { address: NftFarm, name: 'maxMintPerNft' },\n          { address: NftFarm, name: 'tokenPerBurn' },\n        ])\n\n        // TODO: Figure out why these are coming back as arrays\n        const [startBlockNumber]: [BigNumber] = startBlockNumberArr\n        const [endBlockNumber]: [BigNumber] = endBlockNumberArr\n        const [countBurnt]: [BigNumber] = countBurntArr\n        const [totalSupplyDistributed]: [BigNumber] = totalSupplyDistributedArr\n        const [currentDistributedSupply]: [BigNumber] = currentDistributedSupplyArr\n\n        setState((prevState) => ({\n          ...prevState,\n          isInitialized: true,\n          countBurnt: countBurnt.toNumber(),\n          startBlockNumber: startBlockNumber.toNumber(),\n          endBlockNumber: endBlockNumber.toNumber(),\n          currentDistributedSupply: currentDistributedSupply.toNumber(),\n          totalSupplyDistributed: totalSupplyDistributed.toNumber(),\n          allowMultipleClaims: allowMultipleClaimsArr[0],\n          rarity: rarityArr[0].toString(),\n          priceMultiplier: parseFloat(priceMultiplierArr[0].toString()),\n          maxMintPerNft: parseInt(maxMintPerNftArr[0].toString()),\n          tokenPerBurn: getFromWei(tokenPerBurnArr[0]),\n        }))\n      } catch (error) {\n        console.error('an error occured', error)\n      }\n    }\n\n    fetchContractData()\n  }, [isInitialized, setState])\n\n  // Data from the contract that needs an account\n  useEffect(() => {\n    const fetchContractData = async () => {\n      try {\n        const nftContract = getNftContract()\n\n        const getMinted = await multicall(nftFarm, [{ address: NftFarm, name: 'getMinted', params: [account] }])\n\n        // console.log('getMinted', getMinted)\n\n        const hasClaimed = getMinted[0][0]\n        const amounts = getToFloat(getMinted[0][1])\n        const ownerById = getMinted[0][2]\n        const maxMintByNft = getToInt(getMinted[0][3])\n        const prices = getFromWayArray(getMinted[0][4])\n        const myMints = getToInt(getMinted[0][5])\n\n        // console.log('hasClaimed', hasClaimed)\n        // console.log('amounts', amounts)\n        // console.log('ownerById', ownerById)\n        // console.log('maxMintByNft', maxMintByNft)\n        // console.log('prices', prices)\n\n        const balanceOf = await nftContract.methods.balanceOf(account).call()\n\n        let nftMap: BunnyMap = {}\n\n        // If the \"balanceOf\" is greater than 0 then retrieve the tokenIds\n        // owned by the wallet, then the nftId's associated with the tokenIds\n        if (balanceOf > 0) {\n          const getTokenIdAndBunnyId = async (index: number) => {\n            try {\n              const tokenId = await nftContract.methods.tokenOfOwnerByIndex(account, index).call()\n              const nftId = await nftContract.methods.getBunnyId(tokenId).call()\n\n              return [parseInt(nftId, 10), parseInt(tokenId, 10)]\n            } catch (error) {\n              return null\n            }\n          }\n\n          const tokenIdPromises = []\n\n          for (let i = 0; i < balanceOf; i++) {\n            tokenIdPromises.push(getTokenIdAndBunnyId(i))\n          }\n\n          const tokenIdsOwnedByWallet = await Promise.all(tokenIdPromises)\n\n          // While improbable a wallet can own more than one of the same nft so the format is:\n          // { [nftId]: [array of tokenIds] }\n          nftMap = tokenIdsOwnedByWallet.reduce((accum, association) => {\n            if (!association) {\n              return accum\n            }\n\n            const [nftId, tokenId] = association\n\n            return {\n              ...accum,\n              [nftId]: accum[nftId] ? [...accum[nftId], tokenId] : [tokenId],\n            }\n          }, {})\n        }\n\n        setState((prevState) => ({\n          ...prevState,\n          isInitialized: true,\n          hasClaimed,\n          ownerById,\n          balanceOf,\n          nftMap,\n\n          amounts,\n          maxMintByNft,\n          prices,\n          myMints,\n        }))\n      } catch (error) {\n        console.error('an error occured', error)\n      }\n    }\n\n    const fetchNonLoggedInContractData = async () => {\n      try {\n        const getMinted = await multicall(nftFarm, [\n          { address: NftFarm, name: 'getMinted', params: ['0x0000000000000000000000000000000000000000'] },\n        ])\n        const hasClaimed = getMinted[0][0]\n        const amounts = getToFloat(getMinted[0][1])\n\n        setState((prevState) => ({\n          ...prevState,\n          isInitialized: true,\n          hasClaimed,\n          amounts,\n        }))\n      } catch (error) {\n        console.error('an error occured', error)\n      }\n    }\n\n    if (account) {\n      fetchContractData()\n    } else {\n      fetchNonLoggedInContractData()\n    }\n  }, [isInitialized, account, setState])\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false\n    }\n  }, [isMounted])\n\n  const canBurnNft = currentBlock <= state.endBlockNumber\n  const getTokenIds = (nftId: number) => state.nftMap[nftId]\n\n  /**\n   * Allows consumers to re-fetch all data from the contract. Triggers the effects.\n   * For example when a transaction has been completed\n   */\n  const reInitialize = () => {\n    // Only attempt to re-initialize if the component is still mounted\n    // Transactions can take awhile so it is likely some users will navigate to another page\n    // before the transaction is finished\n    if (isMounted.current) {\n      setState((prevState) => ({ ...prevState, isInitialized: false }))\n    }\n  }\n\n  return (\n    <NftProviderContext.Provider value={{ ...state, canBurnNft, getTokenIds, reInitialize }}>\n      {children}\n    </NftProviderContext.Provider>\n  )\n}\n\nexport default NftProvider\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Button, Modal, Text } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { NftFarm, AMOUNT_TO_CLAIM } from 'config/constants/nfts'\nimport { getLifeAddress } from 'utils/addressHelpers'\nimport { Nft } from 'config/constants/types'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { useERC20, useRabbitMintingFarm } from 'hooks/useContract'\nimport InfoRow from './InfoRow'\nimport { useNftAllowance } from '../../../hooks/useAllowance'\nimport { useNftApprove } from '../../../hooks/useApprove'\n\ninterface ClaimNftModalProps {\n  nft: Nft\n  onSuccess: () => any\n  onDismiss?: () => void\n}\n\nconst Value = styled(Text)`\n  font-weight: 600;\n`\n\nconst ModalContent = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Actions = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 8px;\n`\n\nconst ClaimNftModal: React.FC<ClaimNftModalProps> = ({ nft, onSuccess, onDismiss }) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [error, setError] = useState(null)\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const nftMintingContract = useRabbitMintingFarm(NftFarm)\n  const contraToken = useERC20(getLifeAddress())\n  const allowance = useNftAllowance(contraToken, NftFarm, pendingTx)\n  const onApprove = useNftApprove(contraToken, NftFarm)\n  const cakeBalance = useTokenBalance(getLifeAddress())\n  const cakeInWallet = getBalanceNumber(cakeBalance)\n\n  // console.log('getLifeAddress', getLifeAddress(), NftFarm, allowance)\n  // console.log('allowance', allowance)\n\n  const handleConfirm = async () => {\n    if (allowance === null) {\n      return\n    }\n\n    try {\n      await nftMintingContract.methods\n        .mintNFT(nft.nftId)\n        .send({ from: account })\n        .on('sending', () => {\n          setIsLoading(true)\n        })\n        .on('receipt', () => {\n          onDismiss()\n          onSuccess()\n        })\n        .on('error', () => {\n          console.error(error)\n          setError('Unable to claim NFT')\n          setIsLoading(false)\n        })\n    } catch (err) {\n      console.error('Unable to mint NFT:', err)\n    }\n  }\n\n  useEffect(() => {\n    if (cakeInWallet === 0) {\n      setError(`You must have LIFE balance to claim NFT`)\n    }\n  }, [cakeInWallet, setError])\n\n  return (\n    <Modal title={`Claim NFT for ${nft.tokenAmount} LIFE`} onDismiss={onDismiss}>\n      <ModalContent>\n        {error && (\n          <Text color=\"failure\" mb=\"8px\">\n            {error}\n          </Text>\n        )}\n        <InfoRow>\n          <Text>{TranslateString(999, 'You will receive')}:</Text>\n          <Value>{`1x \"${nft.name}\" NFT`}</Value>\n        </InfoRow>\n      </ModalContent>\n      <Actions>\n        <Button\n          fullWidth\n          disabled={!account || pendingTx || isLoading || allowance > 0}\n          onClick={async () => {\n            try {\n              setPendingTx(true)\n              await onApprove()\n              setPendingTx(false)\n            } catch (e) {\n              setPendingTx(false)\n              console.error(e)\n            }\n          }}\n        >\n          Approve\n        </Button>\n\n        <Button\n          fullWidth\n          onClick={handleConfirm}\n          disabled={!account || isLoading || cakeInWallet <= 0 || allowance <= 0}\n        >\n          {TranslateString(464, 'Confirm')}\n        </Button>\n      </Actions>\n    </Modal>\n  )\n}\n\nexport default ClaimNftModal\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Button, Checkbox, Modal, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { Nft } from 'config/constants/types'\nimport { NftFarm, AMOUNT_TO_CLAIM } from 'config/constants/nfts'\nimport { useRabbitMintingFarm } from 'hooks/useContract'\nimport InfoRow from './InfoRow'\n\ninterface BurnNftModalProps {\n  nft: Nft\n  tokenIds: number[]\n  onSuccess: () => any\n  onDismiss?: () => void\n}\n\nconst Value = styled(Text)`\n  font-weight: 600;\n`\n\nconst ModalContent = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Actions = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 8px;\n`\n\nconst BurnNftModal: React.FC<BurnNftModalProps> = ({ nft, tokenIds, onSuccess, onDismiss }) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(null)\n  const [accepted, setAccepted] = useState(false)\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const nftMintingContract = useRabbitMintingFarm(NftFarm)\n\n  const handleConfirm = async () => {\n    try {\n      const [tokenId] = tokenIds\n\n      await nftMintingContract.methods\n        .burnNFT(tokenId)\n        .send({ from: account })\n        .on('sending', () => {\n          setIsLoading(true)\n        })\n        .on('receipt', () => {\n          onDismiss()\n          onSuccess()\n        })\n        .on('error', () => {\n          console.error(error)\n          setError('Unable to burn NFT')\n          setIsLoading(false)\n        })\n    } catch (err) {\n      console.error('Unable to burn NFT:', err)\n    }\n  }\n\n  return (\n    <Modal title={TranslateString(999, 'Trade in NFT')} onDismiss={onDismiss}>\n      <ModalContent>\n        {error && (\n          <Text color=\"failure\" mb=\"8px\">\n            {error}\n          </Text>\n        )}\n        <InfoRow>\n          <Text>{TranslateString(999, 'Trade in')}:</Text>\n          <Value>{`1x \"${nft.name}\" NFT`}</Value>\n        </InfoRow>\n        <InfoRow>\n          <Text>{TranslateString(999, 'You will receive')}:</Text>\n          <Value>${AMOUNT_TO_CLAIM} FUT</Value>\n        </InfoRow>\n      </ModalContent>\n      <ModalContent>\n        <Text color=\"failure\">\n          {TranslateString(999, 'When you trade in this NFT to receive FUT, you will lose access to it forever!')}\n        </Text>\n        <Text color=\"failure\">{TranslateString(999, 'It will be burned and removed from circulation')}</Text>\n      </ModalContent>\n      <ModalContent style={{ alignItems: 'center', display: 'inline-flex' }}>\n        <Checkbox checked={accepted} scale=\"sm\" onChange={() => setAccepted(!accepted)} />\n        <Text ml=\"8px\" onClick={() => setAccepted(!accepted)} style={{ cursor: 'pointer' }}>\n          {TranslateString(999, 'I understand')}\n        </Text>\n      </ModalContent>\n      <Actions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button fullWidth onClick={handleConfirm} disabled={!account || isLoading || !accepted}>\n          {TranslateString(464, 'Confirm')}\n        </Button>\n      </Actions>\n    </Modal>\n  )\n}\n\nexport default BurnNftModal\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Web3 from 'web3'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Button, Input, Modal, Text } from '@pancakeswap-libs/uikit'\nimport { NFT } from 'config/constants/nfts'\nimport { Nft } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport { usePancakeRabbits } from 'hooks/useContract'\nimport InfoRow from './InfoRow'\n\ninterface TransferNftModalProps {\n  nft: Nft\n  tokenIds: number[]\n  onSuccess: () => any\n  onDismiss?: () => void\n}\n\nconst Value = styled(Text)`\n  font-weight: 600;\n`\n\nconst ModalContent = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Actions = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 8px;\n`\n\nconst Label = styled.label`\n  color: ${({ theme }) => theme.colors.text};\n  display: block;\n  margin-bottom: 8px;\n  margin-top: 24px;\n`\n\nconst TransferNftModal: React.FC<TransferNftModalProps> = ({ nft, tokenIds, onSuccess, onDismiss }) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [value, setValue] = useState('')\n  const [error, setError] = useState(null)\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const nftContract = usePancakeRabbits(NFT)\n\n  const handleConfirm = async () => {\n    try {\n      const isValidAddress = Web3.utils.isAddress(value)\n\n      if (!isValidAddress) {\n        setError(TranslateString(999, 'Please enter a valid wallet address'))\n      } else {\n        await nftContract.methods\n          .transferFrom(account, value, tokenIds[0])\n          .send({ from: account })\n          .on('sending', () => {\n            setIsLoading(true)\n          })\n          .on('receipt', () => {\n            onDismiss()\n            onSuccess()\n          })\n          .on('error', () => {\n            console.error(error)\n            setError('Unable to transfer NFT')\n            setIsLoading(false)\n          })\n      }\n    } catch (err) {\n      console.error('Unable to transfer NFT:', err)\n    }\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: inputValue } = evt.target\n    setValue(inputValue)\n  }\n\n  return (\n    <Modal title={TranslateString(999, 'Transfer NFT')} onDismiss={onDismiss}>\n      <ModalContent>\n        {error && (\n          <Text color=\"failure\" mb=\"8px\">\n            {error}\n          </Text>\n        )}\n        <InfoRow>\n          <Text>{TranslateString(999, 'Transferring')}:</Text>\n          <Value>{`1x \"${nft.name}\" NFT`}</Value>\n        </InfoRow>\n        <Label htmlFor=\"transferAddress\">{TranslateString(999, 'Receiving address')}:</Label>\n        <Input\n          id=\"transferAddress\"\n          name=\"address\"\n          type=\"text\"\n          placeholder={TranslateString(999, 'Paste address')}\n          value={value}\n          onChange={handleChange}\n          isWarning={error}\n          disabled={isLoading}\n        />\n      </ModalContent>\n      <Actions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button fullWidth onClick={handleConfirm} disabled={!account || isLoading || !value}>\n          {TranslateString(464, 'Confirm')}\n        </Button>\n      </Actions>\n    </Modal>\n  )\n}\n\nexport default TransferNftModal\n","import React, { useState, useContext, useCallback } from 'react'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Tag,\n  Button,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Text,\n  CardFooter,\n  useModal,\n} from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\nimport { Nft } from 'config/constants/types'\nimport { AMOUNT_TO_CLAIM } from 'config/constants/nfts'\nimport { useHistory } from 'react-router-dom'\nimport InfoRow from '../InfoRow'\nimport Image from '../Image'\nimport { NftProviderContext } from '../../contexts/NftProvider'\nimport { getNftContract } from '../../utils/contracts'\nimport ClaimNftModal from '../ClaimNftModal'\nimport BurnNftModal from '../BurnNftModal'\nimport TransferNftModal from '../TransferNftModal'\n\ninterface NftCardProps {\n  nft: Nft\n}\n\nconst Header = styled(InfoRow)`\n  min-height: 44px;\n`\n\nconst DetailsButton = styled(Button).attrs({ variant: 'text', fullWidth: true })`\n  height: auto;\n  padding: 16px 24px;\n\n  &:hover:not(:disabled):not(:active) {\n    background-color: transparent;\n  }\n\n  &:focus:not(:active) {\n    box-shadow: none;\n  }\n`\n\nconst InfoBlock = styled.div`\n  padding: 0 24px 24px;\n`\n\nconst Value = styled(Text)`\n  font-weight: 600;\n`\n\nconst ViewNft = styled(Text)`\n  @media (max-width: 1300px) {\n    font-size: 11px;\n  }\n`\n\nconst NftCard: React.FC<NftCardProps> = ({ nft }) => {\n  const [state, setState] = useState({\n    isLoading: false,\n    isOpen: false,\n    nftCount: 0,\n    nftBurnCount: 0,\n  })\n  const TranslateString = useI18n()\n  const {\n    isInitialized,\n    hasClaimed,\n    ownerById,\n    canBurnNft,\n    totalSupplyDistributed,\n    currentDistributedSupply,\n    getTokenIds,\n    reInitialize,\n    allowMultipleClaims,\n    rarity,\n    priceMultiplier,\n    maxMintPerNft,\n    tokenPerBurn,\n    amounts,\n    maxMintByNft,\n    prices,\n    myMints,\n  } = useContext(NftProviderContext)\n  const { account } = useWallet()\n  const history = useHistory()\n\n  // maxMintPerNft limit max amount that a nft can be minted\n  // maxMintByNft array containing individual amount of mint per nft index\n  // prices array containing individual prices of a mint per nft index\n  // tokenPerBurn global price\n\n  const { nftId, name, previewImage, originalImage, description, tokenAmount, tokenSupply } = nft\n  const PRICE = prices[nftId] || tokenPerBurn // here we get the price\n\n  const firstCharOfAccount = account != null && account.slice(0, 4)\n  const lastCharOfAccount = account != null && account.slice(-4)\n\n  const accountName = account != null && `${firstCharOfAccount}...${lastCharOfAccount}`\n\n  const loggedIn = account !== null\n\n  // console.log('?hasClaimed', hasClaimed)\n  // console.log('?ownerById', ownerById)\n\n  const nftIndex = hasClaimed && hasClaimed.indexOf(nftId)\n\n  const MINTS = myMints[nftIndex] || 0\n\n  // not sure about this, you need to check if this oser own this nft in the view nft page.\n  // const youAreTheLastOwner = ownerById && ownerById[nftIndex] && ownerById[nftIndex].toString() === account.toString()\n\n  const MINTED = amounts[nftIndex] ? parseInt(amounts[nftIndex].toString()) : 0\n  const MAX_MINT = maxMintByNft[nftIndex] ? parseInt(maxMintByNft[nftIndex].toString()) : maxMintPerNft\n\n  const walletCanClaim = maxMintPerNft === 0 || MINTED === undefined || MINTED < MAX_MINT\n\n  // console.log('CONTRACT/GALLERY INFO:', totalSupplyDistributed, rarity, priceMultiplier, maxMintPerNft, tokenPerBurn)\n  // console.log('LIMITS BY NFT:', tokenPerBurn, amounts, maxMintByNft, prices)\n  // console.log(nftId, 'walletCanClaim', walletCanClaim, maxMintPerNft, MINTED, MAX_MINT)\n\n  const tokenIds = getTokenIds(nftId)\n  const isSupplyAvailable = currentDistributedSupply < totalSupplyDistributed\n  const walletOwnsNft = tokenIds && tokenIds.length > 0\n  const Icon = state.isOpen ? ChevronUpIcon : ChevronDownIcon\n\n  const fetchDetails = useCallback(async () => {\n    setState((prevState) => ({ ...prevState, isLoading: true }))\n    try {\n      const { methods } = getNftContract()\n      const nftCount = await methods.nftCount(nftId).call()\n      const nftBurnCount = await methods.nftBurnCount(nftId).call()\n\n      setState((prevState) => ({\n        ...prevState,\n        isLoading: false,\n        isDataFetched: true,\n        nftCount: parseInt(nftCount, 10),\n        nftBurnCount: parseInt(nftBurnCount, 10),\n      }))\n    } catch (error) {\n      console.error(error)\n    }\n  }, [nftId])\n\n  const handleClick = async () => {\n    if (state.isOpen) {\n      setState((prevState) => ({ ...prevState, isOpen: !prevState.isOpen }))\n    } else {\n      try {\n        await fetchDetails()\n      } catch (error) {\n        console.error(error)\n      } finally {\n        setState((prevState) => ({ ...prevState, isOpen: !prevState.isOpen }))\n      }\n    }\n  }\n\n  const handleSuccess = () => {\n    fetchDetails()\n    reInitialize()\n  }\n\n  const [onPresentClaimModal] = useModal(<ClaimNftModal nft={nft} onSuccess={handleSuccess} />)\n  const [onPresentBurnModal] = useModal(<BurnNftModal nft={nft} tokenIds={tokenIds} onSuccess={handleSuccess} />)\n  const [onPresentTransferModal] = useModal(\n    <TransferNftModal nft={nft} tokenIds={tokenIds} onSuccess={handleSuccess} />,\n  )\n\n  return (\n    <Card isActive={walletOwnsNft}>\n      <Image src={`/images/nfts/${previewImage}`} alt={name} originalLink={walletOwnsNft ? originalImage : null} />\n      <CardBody>\n        <Header>\n          <Heading>{name}</Heading>\n          {isInitialized && walletCanClaim && (\n            <Tag outline variant=\"success\">\n              {TranslateString(526, 'Available')}\n            </Tag>\n          )}\n          {isInitialized && !walletCanClaim && (\n            <Tag outline variant=\"failure\">\n              Sold Out\n            </Tag>\n          )}\n          {isInitialized && tokenIds && (\n            <Tag outline variant=\"secondary\">\n              {TranslateString(999, 'In Wallet')}\n            </Tag>\n          )}\n        </Header>\n        {isInitialized && walletOwnsNft && (\n          <Button fullWidth variant=\"secondary\" mt=\"24px\" onClick={onPresentTransferModal}>\n            {TranslateString(999, 'Transfer')}\n          </Button>\n        )}\n        {isInitialized && loggedIn && walletCanClaim && isSupplyAvailable && (\n          <Button fullWidth onClick={onPresentClaimModal} mt=\"24px\">\n            {TranslateString(999, 'Claim this NFT')} for {tokenAmount} LIFE\n          </Button>\n        )}\n        {isInitialized && (\n          <Button fullWidth onClick={() => history.push(`detail/${nftId}`)} mt=\"24px\">\n            <ViewNft>\n              View NFT ({MINTED}/{tokenSupply} MINTED)\n            </ViewNft>\n          </Button>\n        )}\n        {isInitialized && canBurnNft && walletOwnsNft && (\n          <Button variant=\"danger\" fullWidth onClick={onPresentBurnModal} mt=\"24px\">\n            {TranslateString(999, 'Trade in for LIFE')}\n          </Button>\n        )}\n      </CardBody>\n      <CardFooter p=\"0\">\n        <DetailsButton endIcon={<Icon width=\"24px\" color=\"primary\" />} onClick={handleClick}>\n          {state.isLoading ? TranslateString(999, 'Loading...') : TranslateString(999, 'Details')}\n        </DetailsButton>\n        {state.isOpen && (\n          <InfoBlock>\n            <Text as=\"p\" color=\"textSubtle\" mb=\"16px\" style={{ textAlign: 'center' }}>\n              {description}\n            </Text>\n            <InfoRow>\n              <Text>{TranslateString(999, 'Number minted')}:</Text>\n              <Value>\n                {MINTED}/{tokenSupply}\n              </Value>\n            </InfoRow>\n            <InfoRow>\n              <Text>{TranslateString(999, 'Minted By Me')}:</Text>\n              <Value>{MINTS}</Value>\n            </InfoRow>\n          </InfoBlock>\n        )}\n      </CardFooter>\n    </Card>\n  )\n}\n\nexport default NftCard\n","import styled from 'styled-components'\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\n\nconst NftGrid = styled(BaseLayout)`\n  padding-bottom: 24px;\n  padding-top: 24px;\n\n  & > div {\n    grid-column: 2 / 6;\n\n    ${({ theme }) => theme.mediaQueries.sm} {\n      grid-column: span 4;\n    }\n  }\n`\n\nexport default NftGrid\n","import React from 'react'\nimport orderBy from 'lodash/orderBy'\nimport nfts from 'config/constants/nfts'\nimport NftCard from './NftCard'\nimport NftGrid from './NftGrid'\n\nconst NftList = () => {\n  return (\n    <NftGrid>\n      {orderBy(nfts, 'sortOrder').map((nft) => (\n        <div key={nft.name}>\n          <NftCard nft={nft} />\n        </div>\n      ))}\n    </NftGrid>\n  )\n}\n\nexport default NftList\n","import React, { useContext } from 'react'\nimport { Card, CardBody, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { NftProviderContext } from '../contexts/NftProvider'\nimport InfoRow from './InfoRow'\n\nconst NftProgressSimple = () => {\n  const TranslateString = useI18n()\n  const { isInitialized, currentDistributedSupply, totalSupplyDistributed, countBurnt } = useContext(NftProviderContext)\n\n  return (\n    <Card>\n      <CardBody>\n        <InfoRow>\n          <Text>{TranslateString(999, 'Total Base and Rare NFTs Claimed')}:</Text>\n          <Text>\n            <strong>{!isInitialized ? '...' : `${currentDistributedSupply}/${totalSupplyDistributed}`}</strong>\n          </Text>\n        </InfoRow>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default NftProgressSimple\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { NftProviderContext } from '../contexts/NftProvider'\nimport NftProgress from './NftProgress'\nimport NftProgressSimple from './NftProgressSimple'\nimport StatusCard from './StatusCard'\n\nconst StyledNtfInfo = styled.div`\n  align-items: start;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`\n\nconst NftInfo = () => {\n  const { canBurnNft } = useContext(NftProviderContext)\n\n  return <NftProgressSimple />\n}\n\nexport default NftInfo\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Button } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport { useHistory } from 'react-router-dom'\nimport HowItWorks from './components/HowItWorks'\nimport NftList from './components/NftList'\nimport NftProvider from './contexts/NftProvider'\nimport NftInfo from './components/NftInfo'\n\nconst StyledHero = styled.div`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 32px;\n`\n\nconst CustomButton = styled(Button)`\n  margin-right: 20px;\n`\n\nconst GoldenButton = styled(Button)`\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(110, 80, 20, 0.4), inset 0 -2px 5px 1px rgba(139, 66, 8, 1),\n    inset 0 -1px 1px 3px rgba(250, 227, 133, 1);\n  background-image: linear-gradient(160deg, #a54e07, #b47e11, #fef1a2, #bc881b, #a54e07);\n  border: 1px solid #a55d07;\n  color: rgb(120, 50, 5);\n  text-shadow: 0 2px 2px rgba(250, 227, 133, 1);\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  background-size: 100% 100%;\n  background-position: center;\n\n  &:focus,\n  &:hover {\n    background-size: 150% 150%;\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23), inset 0 -2px 5px 1px #b17d10,\n      inset 0 -1px 1px 3px rgba(250, 227, 133, 1);\n    border: 1px solid rgba(165, 93, 7, 0.6);\n    color: rgba(120, 50, 5, 0.8);\n  }\n  &:active {\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(110, 80, 20, 0.4), inset 0 -2px 5px 1px #b17d10,\n      inset 0 -1px 1px 3px rgba(250, 227, 133, 1);\n  }\n`\n\nconst Nft = () => {\n  const TranslateString = useI18n()\n  const history = useHistory()\n\n  return (\n    <NftProvider>\n      <Page>\n        <StyledHero>\n          <Heading as=\"h1\" size=\"xl\" color=\"#9f0d0d\" mb=\"24px\">\n            Base and Rare NFTs\n          </Heading>\n          <Heading as=\"h2\" size=\"lg\" color=\"#9f0d0d\">\n            {TranslateString(999, 'Trade in for LIFE, or keep for your collection!')}\n          </Heading>\n          <CustomButton onClick={() => history.push(`nft`)} mt=\"24px\">\n            Base and Rare NFTs\n          </CustomButton>\n          <CustomButton variant=\"subtle\" onClick={() => history.push(`epic`)} mt=\"24px\">\n            Epic NFTs\n          </CustomButton>\n          <GoldenButton onClick={() => history.push(`legendary`)} mt=\"24px\">\n            Legendary NFTs\n          </GoldenButton>\n        </StyledHero>\n\n        <NftInfo />\n        <NftList />\n      </Page>\n    </NftProvider>\n  )\n}\n\nexport default Nft\n"],"sourceRoot":""}